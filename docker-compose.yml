version: '3'

services:
  api:
    image: kyontan/netcon-score-server:api
    env_file: .env
    build:
      context: api/
    depends_on:
      - db
      - redis
    ports: ['127.0.0.1:8900:3000']
    stdin_open: true
    tty: true
    volumes:
      - './api:/usr/src/app'
    command: sh -ec '
      if [ -f "tmp/pids/server.pid" ]; then
        rm tmp/pids/server.pid;
      fi

      dockerize -wait tcp://redis:6379 -timeout 100s;
      dockerize -wait tcp://db:5432 -timeout 100s;
      sleep 2;
      bundle exec rake db:prepare;
      bundle exec rails server -b 0.0.0.0;
      '

  ui:
    image: kyontan/netcon-score-server:ui
    env_file: .env
    build:
      context: ui/
    ports: ['127.0.0.1:8901:3000']
    stdin_open: true
    tty: true
    volumes:
      - './ui:/usr/src/app'
    command: yarn run dev

  db:
    image: postgres:11.3-alpine
    env_file: .env
    volumes:
      - 'pgdata:/var/lib/postgresql/data'
    stdin_open: true
    tty: true
    ports: ['127.0.0.1:8902:5432']
    command: ['postgres', '-c', 'max_connections=$POSTGRES_MAX_CONNECTIONS', '-c', 'shared_buffers=$POSTGRES_SHARED_BUFFERS', '-c', 'work_mem=$POSTGRES_WORK_MEM']

  redis:
    image: redis:5.0.4-alpine
    env_file: .env
    ports: ['127.0.0.1:8903:6379']

  yamllint:
    image: kyontan/netcon-score-server:yamllint
    build:
      context: yamllint/
    volumes:
      - './:/usr/src/app'
    command: echo "yamllint is disabled"
    # command: yamllint -c /usr/src/app/.yamllint /usr/src/app

  push:
    image: openfresh/plasma:0.2.2
    env_file: .env
    depends_on:
      - redis
    ports: ['127.0.0.1:8904:8080']

  vmdb-api:
    image: kyontan/netcon-score-server:vmdb-api
    environment:
      - DEBUG=1
    env_file: .env
    build:
      context: vmdb-api/
    depends_on:
      - db
    ports: ['127.0.0.1:8905:8080']

  vm-management-service:
    image: kyontan/netcon-score-server:vm-management-service
    ports: ['127.0.0.1:8951:80', '127.0.0.1:8950:81']
    volumes:
      - './vm-management-service-conf-d:/etc/nginx/conf.d'
      - './vm-management-service-log:/var/log'

  scheduler:
    image: kyontan/netcon-score-server:scheduler
    tty: true
    volumes:
      - './scheduler.yaml:/scheduler.yaml'
      - './scheduler-log:/scheduler-log'
    command: ["scheduler", "start", "--config", "/scheduler.yaml", "--log-file-path", "/scheduler-log/scheduler.log"]
    # oneshotで実行する場合
    #command: ["scheduler", "start", "--config", "/scheduler.yaml", "--oneshot"]

  coordinator:
    image: kyontan/netcon-score-server:coordinator
    tty: true
    volumes:
      - './networkcontest-58d9c7749479.json:/var/app/creds.json'
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/var/app/creds.json
    command: ["--auth_type", "sa", "--project", "networkcontest", "--zones", "asia-northeast1-b", "asia-northeast2-a", "asia-east1-b", "--vmdb_url", "http://vmdb-api:8080", "--loop", "true", "--loop_interval", "60"]
    # dry_runしてinterval10秒
    #command: ["--dry_run", "true", "--auth_type", "sa", "--project", "networkcontest", "--zones", "asia-northeast1-b", "asia-northeast2-a", "asia-east1-b", "--vmdb_url", "http://vmdb-api:8080", "--loop", "true", "--loop_interval", "10"]

  exporter:
    image: kyontan/netcon-score-server-exporter:latest
    env_file: .env
    ports: ['127.0.0.1:8906:4567']

volumes:
  pgdata:
